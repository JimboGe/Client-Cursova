//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_Cursova.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client_Cursova.ServiceReference1.LogUser LogUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client_Cursova.ServiceReference1.Message[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_Cursova.ServiceReference1.LogUser LogUser {
            get {
                return this.LogUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LogUserField, value) != true)) {
                    this.LogUserField = value;
                    this.RaisePropertyChanged("LogUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_Cursova.ServiceReference1.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogUser", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class LogUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConnectionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client_Cursova.ServiceReference1.User[] UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConnectionTime {
            get {
                return this.ConnectionTimeField;
            }
            set {
                if ((this.ConnectionTimeField.Equals(value) != true)) {
                    this.ConnectionTimeField = value;
                    this.RaisePropertyChanged("ConnectionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_Cursova.ServiceReference1.User[] User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client_Cursova.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserId {
            get {
                return this.ToUserIdField;
            }
            set {
                if ((this.ToUserIdField.Equals(value) != true)) {
                    this.ToUserIdField = value;
                    this.RaisePropertyChanged("ToUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_Cursova.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        Client_Cursova.ServiceReference1.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMessages", ReplyAction="http://tempuri.org/IService1/GetAllMessagesResponse")]
        Client_Cursova.ServiceReference1.Message[] GetAllMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMessages", ReplyAction="http://tempuri.org/IService1/GetAllMessagesResponse")]
        System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.Message[]> GetAllMessagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLogs", ReplyAction="http://tempuri.org/IService1/GetAllLogsResponse")]
        Client_Cursova.ServiceReference1.LogUser[] GetAllLogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLogs", ReplyAction="http://tempuri.org/IService1/GetAllLogsResponse")]
        System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.LogUser[]> GetAllLogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckNickName", ReplyAction="http://tempuri.org/IService1/CheckNickNameResponse")]
        Client_Cursova.ServiceReference1.User CheckNickName(string SignUp_UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckNickName", ReplyAction="http://tempuri.org/IService1/CheckNickNameResponse")]
        System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User> CheckNickNameAsync(string SignUp_UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignUp_NewUser", ReplyAction="http://tempuri.org/IService1/SignUp_NewUserResponse")]
        void SignUp_NewUser(string FullName, string NickName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignUp_NewUser", ReplyAction="http://tempuri.org/IService1/SignUp_NewUserResponse")]
        System.Threading.Tasks.Task SignUp_NewUserAsync(string FullName, string NickName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAccount", ReplyAction="http://tempuri.org/IService1/CheckAccountResponse")]
        Client_Cursova.ServiceReference1.User CheckAccount(string NickName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAccount", ReplyAction="http://tempuri.org/IService1/CheckAccountResponse")]
        System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User> CheckAccountAsync(string NickName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogUser", ReplyAction="http://tempuri.org/IService1/LogUserResponse")]
        void LogUser(string NickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogUser", ReplyAction="http://tempuri.org/IService1/LogUserResponse")]
        System.Threading.Tasks.Task LogUserAsync(string NickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ForgotPass", ReplyAction="http://tempuri.org/IService1/ForgotPassResponse")]
        Client_Cursova.ServiceReference1.User ForgotPass(string ForgotPass_NickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ForgotPass", ReplyAction="http://tempuri.org/IService1/ForgotPassResponse")]
        System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User> ForgotPassAsync(string ForgotPass_NickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetUserIsOffline", ReplyAction="http://tempuri.org/IService1/SetUserIsOfflineResponse")]
        void SetUserIsOffline(string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetUserIsOffline", ReplyAction="http://tempuri.org/IService1/SetUserIsOfflineResponse")]
        System.Threading.Tasks.Task SetUserIsOfflineAsync(string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetUserIsOnline", ReplyAction="http://tempuri.org/IService1/SetUserIsOnlineResponse")]
        void SetUserIsOnline(string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetUserIsOnline", ReplyAction="http://tempuri.org/IService1/SetUserIsOnlineResponse")]
        System.Threading.Tasks.Task SetUserIsOnlineAsync(string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MyUserId", ReplyAction="http://tempuri.org/IService1/MyUserIdResponse")]
        int MyUserId(string myUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MyUserId", ReplyAction="http://tempuri.org/IService1/MyUserIdResponse")]
        System.Threading.Tasks.Task<int> MyUserIdAsync(string myUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ToUserId", ReplyAction="http://tempuri.org/IService1/ToUserIdResponse")]
        int ToUserId(string toUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ToUserId", ReplyAction="http://tempuri.org/IService1/ToUserIdResponse")]
        System.Threading.Tasks.Task<int> ToUserIdAsync(string toUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateMessage", ReplyAction="http://tempuri.org/IService1/CreateMessageResponse")]
        void CreateMessage(string Text, int myUserId, int toUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateMessage", ReplyAction="http://tempuri.org/IService1/CreateMessageResponse")]
        System.Threading.Tasks.Task CreateMessageAsync(string Text, int myUserId, int toUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAdmin", ReplyAction="http://tempuri.org/IService1/CreateAdminResponse")]
        void CreateAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAdmin", ReplyAction="http://tempuri.org/IService1/CreateAdminResponse")]
        System.Threading.Tasks.Task CreateAdminAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client_Cursova.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client_Cursova.ServiceReference1.IService1>, Client_Cursova.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client_Cursova.ServiceReference1.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public Client_Cursova.ServiceReference1.Message[] GetAllMessages() {
            return base.Channel.GetAllMessages();
        }
        
        public System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.Message[]> GetAllMessagesAsync() {
            return base.Channel.GetAllMessagesAsync();
        }
        
        public Client_Cursova.ServiceReference1.LogUser[] GetAllLogs() {
            return base.Channel.GetAllLogs();
        }
        
        public System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.LogUser[]> GetAllLogsAsync() {
            return base.Channel.GetAllLogsAsync();
        }
        
        public Client_Cursova.ServiceReference1.User CheckNickName(string SignUp_UserName) {
            return base.Channel.CheckNickName(SignUp_UserName);
        }
        
        public System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User> CheckNickNameAsync(string SignUp_UserName) {
            return base.Channel.CheckNickNameAsync(SignUp_UserName);
        }
        
        public void SignUp_NewUser(string FullName, string NickName, string Password) {
            base.Channel.SignUp_NewUser(FullName, NickName, Password);
        }
        
        public System.Threading.Tasks.Task SignUp_NewUserAsync(string FullName, string NickName, string Password) {
            return base.Channel.SignUp_NewUserAsync(FullName, NickName, Password);
        }
        
        public Client_Cursova.ServiceReference1.User CheckAccount(string NickName, string Password) {
            return base.Channel.CheckAccount(NickName, Password);
        }
        
        public System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User> CheckAccountAsync(string NickName, string Password) {
            return base.Channel.CheckAccountAsync(NickName, Password);
        }
        
        public void LogUser(string NickName) {
            base.Channel.LogUser(NickName);
        }
        
        public System.Threading.Tasks.Task LogUserAsync(string NickName) {
            return base.Channel.LogUserAsync(NickName);
        }
        
        public Client_Cursova.ServiceReference1.User ForgotPass(string ForgotPass_NickName) {
            return base.Channel.ForgotPass(ForgotPass_NickName);
        }
        
        public System.Threading.Tasks.Task<Client_Cursova.ServiceReference1.User> ForgotPassAsync(string ForgotPass_NickName) {
            return base.Channel.ForgotPassAsync(ForgotPass_NickName);
        }
        
        public void SetUserIsOffline(string nickName) {
            base.Channel.SetUserIsOffline(nickName);
        }
        
        public System.Threading.Tasks.Task SetUserIsOfflineAsync(string nickName) {
            return base.Channel.SetUserIsOfflineAsync(nickName);
        }
        
        public void SetUserIsOnline(string nickName) {
            base.Channel.SetUserIsOnline(nickName);
        }
        
        public System.Threading.Tasks.Task SetUserIsOnlineAsync(string nickName) {
            return base.Channel.SetUserIsOnlineAsync(nickName);
        }
        
        public int MyUserId(string myUserName) {
            return base.Channel.MyUserId(myUserName);
        }
        
        public System.Threading.Tasks.Task<int> MyUserIdAsync(string myUserName) {
            return base.Channel.MyUserIdAsync(myUserName);
        }
        
        public int ToUserId(string toUserName) {
            return base.Channel.ToUserId(toUserName);
        }
        
        public System.Threading.Tasks.Task<int> ToUserIdAsync(string toUserName) {
            return base.Channel.ToUserIdAsync(toUserName);
        }
        
        public void CreateMessage(string Text, int myUserId, int toUserId) {
            base.Channel.CreateMessage(Text, myUserId, toUserId);
        }
        
        public System.Threading.Tasks.Task CreateMessageAsync(string Text, int myUserId, int toUserId) {
            return base.Channel.CreateMessageAsync(Text, myUserId, toUserId);
        }
        
        public void CreateAdmin() {
            base.Channel.CreateAdmin();
        }
        
        public System.Threading.Tasks.Task CreateAdminAsync() {
            return base.Channel.CreateAdminAsync();
        }
    }
}
